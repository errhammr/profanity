$baseline : 5px;

$ice: #4db0c4;
$backgroundShade: #df3a26; 
$backgroundShadeGreyRed: #894536; 
$backgroundShademud: #ffeedd; 
$grey: #7c7e7c;
$contrastText: #0e181a;
$landingBody: #d9f5f8;
$bodyText: #222222;

// Imports -------------------------------------------------------------------

@import "compass";
@import "compass/css3";
@import "compass/utilities/general/hacks";	// ms filter-gradient needs this
@import "compass/utilities/general/clearfix";
@import "compass/typography";
@import "compass/css3";
@import "susy";

// Mixin -------------------------------------------------------------------

@mixin border-arrow (
	$box-size: 4em,
	$side: left,
	$style: solid,
	$box-color: #888,
	$position: relative,
	$rounded: false,
	$affect-parent-dimension: true
	) {
	
	position: $position;
		@if $affect-parent-dimension == true {
			@if $side == left or $side == right{
				height: $box-size;
			} @else {
					width: $box-size;
			}
		}	
	&:before {
		content: "";
		display: table;
		position: absolute;
		@if	$rounded == true {
			border: $box-size*0.7 solid transparent;
			border-#{opposite-position($side)}: $box-size*0.7 $style $box-color;
			@include border-radius($box-size*1.3);

				@if $side == left or $side == right{
						top: -20%;
						#{$side}: -$box-size*1.2;
					} @else if $side == top or $side == bottom{
				#{$side}: -$box-size*1.18;
				right: -20%;
			}
		}
		@else {
			border: $box-size/2 solid transparent;
			border-#{opposite-position($side)}: $box-size/2 $style $box-color;
			@if $side == left or $side == right{
				top: 0;
				#{opposite-position($side)}: 100%;
			} @else if $side == top or $side == bottom{
				#{$side}: -$box-size;
				right: 0%;
			}
		}
	}
}

@mixin alpha-border-shape ($style: solid, $border-size: 1em, $shape-colour: #666666, $side: left) {
    border-#{$side}: $style $border-size $shape-colour;
}


// Grid ----------------------------------------------------------------------


$total-columns:		4;
$medium: 			10;
$wide:				16;


$column-width:		2.9em;
$gutter-width:		1.9em;
$grid-padding:		4.5em; //default padding
$container-style:	fluid;
$grid-padding-mobile: 1.8em; 

$show-grid-backgrounds	: true;
$debug-vertical-alignment: true;

@include border-box-sizing;

@mixin bleed($padding: $grid-padding, $sides: left right) {
	@if $sides == 'all' {
		margin: - $padding;
		padding: $padding;
	} @else {
		@each $side in $sides {
			margin-#{$side}: - $padding;
			padding-#{$side}: $padding;
		}
	}
}


$minimum-medium:(0 $medium container-outer-width($medium));
$total-medium:	(container-outer-width($total-columns) $medium container-outer-width($medium));
$minimum-wide:	(0 $wide container-outer-width($wide));
$medium-wide:	(container-outer-width($medium) $wide container-outer-width($wide));


// Fonts

@mixin sans-families {
	font-family: Unica SB, Helvetica Neue, Arial, sans-serif
}



// Vertical rhythm ------------------------------------------------------------

$base-font-size		: 15px;
$base-line-height	: $baseline*4;
$default-rhythm-border-style: solid;
$ie-font-ratio: 20px / 100%;
$base-rhythm-unit: $base-line-height / $base-font-size * 1em;
$base-leader: ($base-line-height - $base-font-size) * 1em / $base-font-size;
$base-half-leader: $base-leader / 2;
$round-to-nearest-half-line: true;
$relative-font-sizing: false;

$show-column-grid-backgrounds: true;
$show-baseline-grid-backgrounds: true;
$show-grid-backgrounds: true;
$grid-background-baseline-height: 10px;
$grid-background-offset: 5%;
$grid-background-column-color: rgba(255, 255, 255, 0.3);
$grid-background-baseline-color: rgba(0, 0, 0, 0.3);



$font-unit: if($relative-font-sizing, 1em, $base-font-size);